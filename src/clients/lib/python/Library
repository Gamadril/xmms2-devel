target="xmmsclient"
source=["xmmsclient.c"]
static=False

def config(env):
	try:
		import distutils
		import distutils.sysconfig
		env["CPPPATH"].append(distutils.sysconfig.get_python_inc())
	except:
		raise ConfigError("Python distutils not installed try again!")
	
	if not env.tryaction("pyrexc --version"):
		raise ConfigError("Pyrexc not found")

	# we need a custom builder to generate xmmsclient.c
	from os import environ
	env['ENV']['PATH'] = environ['PATH']
	pyx = env.Builder(action = '%s %s -o %s' % (env['PYREX'], env.dir+"/xmmsclient.pyx", env.dir+"/xmmsclient.c"))
	env.Append(BUILDERS = {'Pyx' : pyx})

	# we need to get rid of some warnings.
	if env.platform != "win32":
		env['CCFLAGS'].append("-Wno-unused-function")
		env['CCFLAGS'].append("-Wno-unused-label")

	# link with xmmsclient is nice.
	if env.platform == 'win32':		
		env['LIBS'].append("libxmmsclient")
	else:
		env['LIBS'].append("xmmsclient")
	env.Prepend(LIBPATH="src/clients/lib/xmmsclient")
	if env.platform == 'win32':
		env.Prepend(LIBPATH=distutils.sysconfig.PREFIX +"\\libs")
		
	# need to be .so even on darwin (for example)
	env['SHLIBPREFIX']=''
	if env.platform == "win32":		
		env['SHLIBSUFFIX']=".dll"
	else:
		env['SHLIBSUFFIX']=".so"
		
	
	# make sure that we put it in the right directory
	env.librarypath = distutils.sysconfig.get_python_lib()

	# just do it
	env.Pyx (env.dir+"/xmmsclient.c", [env.dir+"/xmmsclient.pyx"])

