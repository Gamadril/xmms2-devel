def build(bld):
  obj = bld.create_obj('cc', 'shlib')
  obj.target = 'xmms_daap'
  obj.includes = '../../include'
  daap_backend = bld.env_of_name('default')['XMMS_DAAP_BACKEND']
  obj.source = ["daap_xform.c", "daap_cmd.c", "daap_conn.c",
                "daap_util.c", "daap_md5.c", "cc_handlers.c",
                "daap_mdns_%s.c" % daap_backend]
  obj.uselib = 'curl glib-2.0'

def configure(conf):
  conf.check_tool('checks')
  # Set the default fallthrough, if no "intelligent" backend is found.
  conf.env['XMMS_DAAP_BACKEND'] = 'dummy'

  # First look for Avahi mdns support
  if (conf.check_pkg("avahi-glib", destvar='avahi') and
      conf.check_pkg("avahi-client", destvar='avahi')):
    # Avahi found
    conf.env['XMMS_DAAP_BACKEND'] = 'avahi'
  elif conf.check_header('dns_sd.h'):
    # We might have dnssd support. If we're not on OSX, check for the
    # presence of the lib.
    if (sys.platform != 'darwin' and
        conf.check_library2('dns_sd', uselib='dnssd', mandatory=0)):
      conf.env['XMMS_DAAP_BACKEND'] = 'dnssd'

  conf.env['XMMS_PLUGINS_ENABLED'].append('daap')
